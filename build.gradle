plugins {
  id 'java'
  id 'eclipse'
  id 'jacoco'
  id 'com.github.kt3k.coveralls' version '2.12.0'
  id 'net.researchgate.release' version '2.8.1'
  id 'maven'
  id 'signing'
}

sourceCompatibility = 1.6
description = 'logback-idobata is simple logback appender for Idobata'
group = 'com.github.fossamagna'
version = version
ext.onCI = System.getenv()['CI'] == 'true'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
ext.sonatypeFullname = validProperty("sonatypeFullname") ? project.property("sonatypeFullname") : null;
ext.sonatypeUsername = validProperty("sonatypeUsername") ? project.property("sonatypeUsername") : null;
ext.sonatypePassword = null

jacocoTestReport {
  reports {
    xml.enabled = true
    html.enabled = true
  }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from "${buildDir}/docs/javadoc"
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

jar {
  manifest {
    attributes 'Implementation-Title': 'Logback Idobata',
               'Implementation-Version': version
  }
}

artifacts {
  archives jar
  archives javadocJar
  archives sourcesJar
}

gradle.taskGraph.whenReady { taskGraph ->
  if (!onCI && isReleaseVersion && taskGraph.allTasks.any { it instanceof Sign }) {
    assert validProperty('signing.keyId'),             'properties for signing must be provided'
    assert validProperty('signing.secretKeyRingFile'), 'properties for signing must be provided'
    def password = askPassword("Enter password for PGP key ${property('signing.keyId')}: ")
    allprojects { ext."signing.password" = password }
  }
}

boolean validProperty(propertyName) {
  try { project.property(propertyName) != null }
  catch (MissingPropertyException) { false }
}

String askPassword(prompt) {
  "${System.console().readPassword(prompt)}"
}

signing {
  required { gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

ext.repositoryUrl = isReleaseVersion ? 'https://oss.sonatype.org/service/local/staging/deploy/maven2' : 'https://oss.sonatype.org/content/repositories/snapshots'

task uploadJars << {
  ext {
    sonatypePassword = askPassword("Enter password for ${sonatypeUsername}@oss.sonatype.org: ")
  }

  allprojects {
    uploadArchives {
      repositories.mavenDeployer {
        repository(url: repositoryUrl) {
          authentication(userName: sonatypeUsername, password: uploadJars.sonatypePassword)
        }
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        pom.project {
          name 'Logback Idobata'
          packaging 'jar'
          description project.description
          url 'https://github.com/fossamagna/logback-idobata'
          scm {
            url 'git@github.com:fossamagna/logback-idobata.git'
            connection 'scm:git:git@github.com:fossamagna/logback-idobata.git'
            developerConnection 'scm:git:git@github.com:fossamagna/logback-idobata.git'
          }
          licenses {
            license {
              name 'The Apache Software License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              distribution 'repo'
            }
          }
          developers {
            developer {
              id sonatypeUsername
              name sonatypeFullname
            }
          }
        }
      }
    }
  }
}

repositories {
  mavenCentral()
}

dependencies {
  compile 'ch.qos.logback:logback-core:1.2.4'
  compile 'ch.qos.logback:logback-classic:1.2.3'
  testCompile ('org.mockito:mockito-core:3.11.0') {
    exclude module: 'hamcrest-core'
  }
  testCompile ('junit:junit:4.13.2') {
    exclude module: 'hamcrest-core'
  }
  testCompile 'org.hamcrest:hamcrest-all:1.3'
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.12'
}

afterReleaseBuild.dependsOn uploadJars
